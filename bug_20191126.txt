

		public static lua_Number luaL_opt(lua_State L, luaL_opt_delegate f, int n, lua_Number d) {
			return lua_isnoneornil(L, (n != 0) ? d : f(L, n)) ? 1 : 0;}
->
		public static lua_Number luaL_opt(lua_State L, luaL_opt_delegate f, int n, lua_Number d) {
			return lua_isnoneornil(L, (n)) ? d : f(L, n);}

and:

		public delegate lua_Integer luaL_opt_delegate_integer(lua_State L, int narg);
		public static lua_Integer luaL_opt_integer(lua_State L, luaL_opt_delegate_integer f, int n, lua_Number d) {
			return (lua_Integer)(lua_isnoneornil(L, n) ? d : f(L, (n)));
		}
		
->
may be this

		public delegate lua_Integer luaL_opt_delegate_integer(lua_State L, int narg);
		public static lua_Integer luaL_opt_integer(lua_State L, luaL_opt_delegate_integer f, int n, lua_Integer d) {
			return lua_isnoneornil(L, n) ? d : f(L, (n));
		}
		

=>
lauxlib.h

		public delegate lua_Number luaL_opt_delegate(lua_State L, int narg);		
		public static lua_Number luaL_opt(lua_State L, luaL_opt_delegate f, int n, lua_Number d) {
			return lua_isnoneornil(L, n) ? d : f(L, n);}
		
		public delegate lua_Integer luaL_opt_delegate_integer(lua_State L, int narg);
		public static lua_Integer luaL_opt_integer(lua_State L, luaL_opt_delegate_integer f, int n, lua_Integer d) {
			return lua_isnoneornil(L, n) ? d : f(L, n);}
